buildscript {
    repositories {
      maven {
        url "https://plugins.gradle.org/m2/"
      }
      mavenCentral()
    }
    dependencies {
        classpath('org.springframework.boot:spring-boot-gradle-plugin:2.0.3.RELEASE')
// tag::build[]
        classpath('gradle.plugin.com.palantir.gradle.docker:gradle-docker:0.13.0')
// end::build[]
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
// tag::plugin[]
apply plugin: 'com.palantir.docker'
// end::plugin[]


// This is used as the docker image prefix (org)
group = 'summer-sdge'
println "appReleaseVersion : ${appReleaseVersion}"

bootJar {
    baseName = 'gs-spring-boot-docker'
    version =  '0.1.0'
}

// tag::task[]
docker {
    dependsOn build
    name "${project.group}/${bootJar.baseName}:1.0.0"
    files bootJar.archivePath
    buildArgs(['JAR_FILE': "${bootJar.archiveName}"])
}

// end::task[]

ext {
    docker_image_tag = "${project.group}/${bootJar.baseName}:${appReleaseVersion}"
}   
println ("Docker Image Tag: ${docker_image_tag}")
task docker_image(type:Exec) {
  dependsOn build

  workingDir '/root'
  //on windows:
  commandLine 'docker', 'build', '-t', "${docker_image_tag}" , 'C:\\temp\\jenkins-data\\jobs\\springboot-java-app\\workspace\\build\\docker'
  ext.output = {
    return standardOutput.toString()
  }
}

repositories {
    mavenCentral()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.springframework.boot:spring-boot-starter-actuator")
    testCompile("org.springframework.boot:spring-boot-starter-test")
    testCompile("junit:junit")
}

